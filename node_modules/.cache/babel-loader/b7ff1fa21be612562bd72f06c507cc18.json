{"ast":null,"code":"import { swap } from \"./utills\";\nexport const getBubbleSortAnimations = array => {\n  const arrayCopy = array.slice(0);\n  const animations = [];\n  let n = arrayCopy.length;\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n - i; j++) {\n      //animations.push([[j], \"active\"]);\n      if (arrayCopy[j] > arrayCopy[j + 1]) {\n        animations.push([[j, j + 1], \"swap\", true]);\n        swap(arrayCopy, j, j + 1);\n      }\n    }\n\n    animations.push([[n - i - 1], \"final\"]);\n  }\n\n  return animations;\n};","map":{"version":3,"sources":["C:/Users/Dedi/Desktop/development/projects/sorting-visualizer-react/src/algorithms/BubbleSort.js"],"names":["swap","getBubbleSortAnimations","array","arrayCopy","slice","animations","n","length","i","j","push"],"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;AAEA,OAAO,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAChD,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,CAAC,GAAGH,SAAS,CAACI,MAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AAC1B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,GAAGE,CAAxB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9B;AACA,UAAIN,SAAS,CAACM,CAAD,CAAT,GAAeN,SAAS,CAACM,CAAC,GAAG,CAAL,CAA5B,EAAqC;AACnCJ,QAAAA,UAAU,CAACK,IAAX,CAAgB,CAAC,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAD,EAAa,MAAb,EAAqB,IAArB,CAAhB;AACAT,QAAAA,IAAI,CAACG,SAAD,EAAYM,CAAZ,EAAeA,CAAC,GAAG,CAAnB,CAAJ;AACD;AACF;;AACDJ,IAAAA,UAAU,CAACK,IAAX,CAAgB,CAAC,CAACJ,CAAC,GAAGE,CAAJ,GAAQ,CAAT,CAAD,EAAc,OAAd,CAAhB;AACD;;AACD,SAAOH,UAAP;AACD,CAfM","sourcesContent":["import { swap } from \"./utills\";\r\n\r\nexport const getBubbleSortAnimations = (array) => {\r\n  const arrayCopy = array.slice(0);\r\n  const animations = [];\r\n  let n = arrayCopy.length;\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n - i; j++) {\r\n      //animations.push([[j], \"active\"]);\r\n      if (arrayCopy[j] > arrayCopy[j + 1]) {\r\n        animations.push([[j, j + 1], \"swap\", true]);\r\n        swap(arrayCopy, j, j + 1);\r\n      }\r\n    }\r\n    animations.push([[n - i - 1], \"final\"]);\r\n  }\r\n  return animations;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}